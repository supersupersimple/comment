// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CommentsColumns holds the columns for the "comments" table.
	CommentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "content", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "approved", "rejected", "deleted"}, Default: "pending"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "depth", Type: field.TypeInt, Default: 0},
		{Name: "reply_to_id", Type: field.TypeString, Nullable: true},
		{Name: "page_id", Type: field.TypeInt64},
		{Name: "user_id", Type: field.TypeInt64},
	}
	// CommentsTable holds the schema information for the "comments" table.
	CommentsTable = &schema.Table{
		Name:       "comments",
		Columns:    CommentsColumns,
		PrimaryKey: []*schema.Column{CommentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "comments_comments_replies",
				Columns:    []*schema.Column{CommentsColumns[6]},
				RefColumns: []*schema.Column{CommentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "comments_pages_comments",
				Columns:    []*schema.Column{CommentsColumns[7]},
				RefColumns: []*schema.Column{PagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "comments_users_comments",
				Columns:    []*schema.Column{CommentsColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "comment_page_id_status_reply_to_id_id",
				Unique:  false,
				Columns: []*schema.Column{CommentsColumns[7], CommentsColumns[2], CommentsColumns[6], CommentsColumns[0]},
			},
			{
				Name:    "comment_status_id",
				Unique:  false,
				Columns: []*schema.Column{CommentsColumns[2], CommentsColumns[0]},
			},
		},
	}
	// ConfsColumns holds the columns for the "confs" table.
	ConfsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "password", Type: field.TypeString},
		{Name: "allow_origins", Type: field.TypeJSON},
		{Name: "cookie_secret", Type: field.TypeString},
		{Name: "limit_per_batch", Type: field.TypeInt, Default: 5},
		{Name: "max_loop_depth", Type: field.TypeInt, Default: 3},
	}
	// ConfsTable holds the schema information for the "confs" table.
	ConfsTable = &schema.Table{
		Name:       "confs",
		Columns:    ConfsColumns,
		PrimaryKey: []*schema.Column{ConfsColumns[0]},
	}
	// PagesColumns holds the columns for the "pages" table.
	PagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "url", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
	}
	// PagesTable holds the schema information for the "pages" table.
	PagesTable = &schema.Table{
		Name:       "pages",
		Columns:    PagesColumns,
		PrimaryKey: []*schema.Column{PagesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "page_created_at",
				Unique:  false,
				Columns: []*schema.Column{PagesColumns[4]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "username", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Default: ""},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "is_admin", Type: field.TypeBool, Default: false},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_username_email",
				Unique:  true,
				Columns: []*schema.Column{UsersColumns[1], UsersColumns[2]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CommentsTable,
		ConfsTable,
		PagesTable,
		UsersTable,
	}
)

func init() {
	CommentsTable.ForeignKeys[0].RefTable = CommentsTable
	CommentsTable.ForeignKeys[1].RefTable = PagesTable
	CommentsTable.ForeignKeys[2].RefTable = UsersTable
}
